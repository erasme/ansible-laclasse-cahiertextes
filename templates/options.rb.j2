# -*- encoding: utf-8 -*-

#
# Fichier de configuration de l'application
#
{% import 'macros/url.j2' as url with context %}

require 'logger'

# development ou production
ENV[ 'RACK_ENV' ]  = '{{ laclasse_environment }}'

# niveau de log de l'application
LOG_LEVEL = Logger::INFO

# Version 
APP_VERSION = '{{ laclasse_cahiertextes_version }}'

# Chemin absolu de l'application sur le serveur
APP_ROOT = File.expand_path(File.join(File.dirname(__FILE__), '..'))

# Mapping HAProxy de l'application, ex : '/v3/docs'
APP_PATH = '{{ laclasse_cahiertextes_path }}'

# Langage par défaut de l'application
LANG = 'fr'

# Clé de hachage pour les cookies Rack
SESSION_KEY = '{{ ansible_all_ipv4_addresses | join('#') | b64encode }}'

# Durée de la session en seconde (défaut 3600)
SESSION_TIME = 3600

# Url de l'ENT
URL_ENT = '{{ laclasse_main_url }}'

# nom du serveur d'annuaire ENT (xml-aaf académiques)
SERVICE_ANNUAIRE_ENT = '{{ laclasse_annuaire_aaf_url }}'

# SSL verification mode
{% if laclasse_cahiertextes_ssl_verify %}
SSL_VERIFY = OpenSSL::SSL::VERIFY_PEER
{% else %}
SSL_VERIFY = OpenSSL::SSL::VERIFY_NONE
{% endif %}

#
# Configuration du Serveur d'Authentification Central CAS
#
module CASAUTH
  CONFIG = {
    host: "{{ laclasse_sso_server }}",
    ssl: '{{ laclasse_sso_ssl }}',
    port: {{ laclasse_sso_port }},
    disable_ssl_verification: {{ laclasse_sso_disable_ssl_verification }},
    login_url: "{{ laclasse_sso_login_url }}",
    service_validate_url: "{{ laclasse_sso_service_validate_url }}",
    logout_url: "{{ laclasse_sso_logout_url }}",
    logout_saml_url: "{{ laclasse_sso_logout_saml }}",
    full_host: "{{ url.trim_trailing_slashes(laclasse_main_url) }}", # Fixes OmniAuthCAS+Rack X-Forwarded-Proto crap
    restmod_url: '{{ laclasse_sso_restmod_url }}',    
  }
end

#
# Configuration du service d'annuaire de l'ENT
#
ANNUAIRE = {
  url:                             '{{ url.trim_trailing_slashes(url.dedup_slashes(laclasse_main_url, "/", laclasse_annuaire_main_path)) }}' ,
  api_key:                         "{{ laclasse_services.annuaire.api_key }}",
  app_id:                          '{{ laclasse_services.annuaire.app_id }}',
  api_mode:                        '{{ laclasse_services.annuaire.api_mode }}'
}

module Configuration
  APP_PREFIX = '{{ laclasse_services.cahiertextes.path }}'
  GIT_COMMIT = '{{ git_tag.stdout }}'
  ENVIRONMENT = '{{ laclasse_environment }}'
  LOGSTASH_SERVER="{{ logstash_server }}"
  LOGSTASH_PORT="{{ logstash_udp_json_port }}"
end

#
# Configuration du service REDIS
#
REDIS = {
  host: '{{ laclasse_redis_server }}',
  port: {{ laclasse_redis_port }},
  redis_root: '{{ laclasse_redis_root }}'
}
